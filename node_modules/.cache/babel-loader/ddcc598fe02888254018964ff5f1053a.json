{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/lectio/frontend/src/components/BookSearch.js\";\nimport React from \"react\";\nimport \"../styles/components/BookSearch.css\";\nimport * as constants from \"../constants\";\nexport default function BookSearch() {\n  const [loading, setLoading] = React.useState(true);\n  const [query, setQuery] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]); // React.useEffect(() => {\n  //   const formattedQuery = query.replace(\" \", \"+\");\n  //   const url = `https://www.googleapis.com/books/v1/volumes?q=${formattedQuery}&key=${constants.google_books_api_key}`;\n  //   if (formattedQuery.length >= 3) {\n  //     fetch(url)\n  //       .then((res) => res.json())\n  //       .then((res) => {\n  //         setSearchResults(res.items);\n  //         setLoading(false);\n  //         console.log(searchResults);\n  //       });\n  //   }\n  // });\n\n  async function handleSubmit() {\n    const formattedQuery = query.replace(\" \", \"+\");\n    const url = `https://www.googleapis.com/books/v1/volumes?q=${formattedQuery}&key=${constants.google_books_api_key}`;\n    await fetch(url).then(res => res.json()).then(res => {\n      setSearchResults(res.items);\n      setLoading(false);\n      console.log(searchResults);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Book Search\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Search\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Go\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-suggestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, loading ? \"\" : searchResults.slice(0, 5).map(book => {\n    const bookInfo = book.volumeInfo;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-suggestion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"search-suggestion-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, bookInfo.title, \" - \", bookInfo.authors[0]), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"search-suggestion-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, bookInfo.publisher, \", \", bookInfo.publishedDate), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"search-suggestion-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, bookInfo.industryIdentifiers.json()[0].identifier));\n  })));\n}","map":{"version":3,"sources":["/Users/barnabynapier/Documents/lectio/frontend/src/components/BookSearch.js"],"names":["React","constants","BookSearch","loading","setLoading","useState","query","setQuery","searchResults","setSearchResults","handleSubmit","formattedQuery","replace","url","google_books_api_key","fetch","then","res","json","items","console","log","e","target","value","slice","map","book","bookInfo","volumeInfo","title","authors","publisher","publishedDate","industryIdentifiers","identifier"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qCAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCT,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1C,CAHmC,CAKnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAeK,YAAf,GAA8B;AAC5B,UAAMC,cAAc,GAAGL,KAAK,CAACM,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAvB;AACA,UAAMC,GAAG,GAAI,iDAAgDF,cAAe,QAAOV,SAAS,CAACa,oBAAqB,EAAlH;AAEA,UAAMC,KAAK,CAACF,GAAD,CAAL,CACHG,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGC,GAAD,IAAS;AACbR,MAAAA,gBAAgB,CAACQ,GAAG,CAACE,KAAL,CAAhB;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACD,KANG,CAAN;AAOD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,QAAQ,EAAGc,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAQ,IAAA,QAAQ,EAAEd,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,OAAO,GACJ,EADI,GAEJK,aAAa,CAACiB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA+BC,IAAD,IAAU;AACtC,UAAMC,QAAQ,GAAGD,IAAI,CAACE,UAAtB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACE,KADZ,SACsBF,QAAQ,CAACG,OAAT,CAAiB,CAAjB,CADtB,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,QAAQ,CAACI,SADZ,QACyBJ,QAAQ,CAACK,aADlC,CAJF,eAOE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,QAAQ,CAACM,mBAAT,CAA6BhB,IAA7B,GAAoC,CAApC,EAAuCiB,UAD1C,CAPF,CADF;AAaD,GAfD,CAHN,CAVF,CADF;AAiCD","sourcesContent":["import React from \"react\";\nimport \"../styles/components/BookSearch.css\";\nimport * as constants from \"../constants\";\n\nexport default function BookSearch() {\n  const [loading, setLoading] = React.useState(true);\n  const [query, setQuery] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState([]);\n\n  // React.useEffect(() => {\n  //   const formattedQuery = query.replace(\" \", \"+\");\n  //   const url = `https://www.googleapis.com/books/v1/volumes?q=${formattedQuery}&key=${constants.google_books_api_key}`;\n\n  //   if (formattedQuery.length >= 3) {\n  //     fetch(url)\n  //       .then((res) => res.json())\n  //       .then((res) => {\n  //         setSearchResults(res.items);\n  //         setLoading(false);\n  //         console.log(searchResults);\n  //       });\n  //   }\n  // });\n\n  async function handleSubmit() {\n    const formattedQuery = query.replace(\" \", \"+\");\n    const url = `https://www.googleapis.com/books/v1/volumes?q=${formattedQuery}&key=${constants.google_books_api_key}`;\n\n    await fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSearchResults(res.items);\n        setLoading(false);\n        console.log(searchResults);\n      });\n  }\n\n  return (\n    <div>\n      <h2>Book Search</h2>\n      <form>\n        <input\n          placeholder=\"Search\"\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button onSubmit={handleSubmit}>Go</button>\n      </form>\n      <hr />\n      <div className=\"book-suggestions\">\n        {loading\n          ? \"\"\n          : searchResults.slice(0, 5).map((book) => {\n              const bookInfo = book.volumeInfo;\n              return (\n                <div className=\"search-suggestion\">\n                  <span className=\"search-suggestion-line\">\n                    {bookInfo.title} - {bookInfo.authors[0]}\n                  </span>\n                  <span className=\"search-suggestion-line\">\n                    {bookInfo.publisher}, {bookInfo.publishedDate}\n                  </span>\n                  <span className=\"search-suggestion-line\">\n                    {bookInfo.industryIdentifiers.json()[0].identifier}\n                  </span>\n                </div>\n              );\n            })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}