{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/libry/frontend/src/pages/HomePage.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table, Input } from \"reactstrap\";\nimport Tickbox from \"../elements/Tickbox.js\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport \"../styles/HomePage.css\";\nimport $ from \"jquery\";\nimport * as constants from \"../constants\";\nexport default function HomePage() {\n  const history = useHistory();\n  const [user, setUser] = React.useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const [books, setBooks] = React.useState([]);\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/get-current-user\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setUser(u[\"username\"]);\n      });\n    }\n  }, [token]);\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(b => {\n        setBooks(b);\n      });\n    } else {\n      history.push(\"/login\");\n    }\n  }, [token]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(constants.dbstring + \"/add-book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user,\n        isread,\n        title,\n        author,\n        rating\n      })\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"text\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"text\",\n    placeholder: \"Author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"text\",\n    placeholder: \"Rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onSubmit: newEntry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    className: \"book-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Read\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Rating\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, books.map(book => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"isread\",\n      scope: \"row\",\n      value: book.isread,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Tickbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"table-editable title\",\n      type: \"text\",\n      value: book.title,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"table-editable author\",\n      type: \"text\",\n      value: book.author,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"table-editable rating\",\n      type: \"text\",\n      value: book.rating,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/libry/frontend/src/pages/HomePage.js"],"names":["React","useHistory","Table","Input","Tickbox","CustomNavbar","$","constants","HomePage","history","user","setUser","useState","token","localStorage","getItem","books","setBooks","useEffect","fetch","dbstring","headers","Authorization","then","res","json","u","b","push","handleSubmit","e","preventDefault","method","body","JSON","stringify","isread","title","author","rating","newEntry","map","book"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table, Input } from \"reactstrap\";\nimport Tickbox from \"../elements/Tickbox.js\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport \"../styles/HomePage.css\";\nimport $ from \"jquery\";\nimport * as constants from \"../constants\";\n\nexport default function HomePage() {\n  const history = useHistory();\n  const [user, setUser] = React.useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const [books, setBooks] = React.useState([]);\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/get-current-user\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => res.json())\n        .then((u) => {\n          setUser(u[\"username\"]);\n        });\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => res.json())\n        .then((b) => {\n          setBooks(b);\n        });\n    } else {\n      history.push(\"/login\");\n    }\n  }, [token]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(constants.dbstring + \"/add-book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user,\n        isread,\n        title,\n        author,\n        rating,\n      }),\n    });\n  }\n\n  return (\n    <div>\n      <CustomNavbar />\n\n      <div className=\"content\">\n        <form>\n          <input className=\"add-item\" type=\"checkbox\" />{\" \"}\n          <input className=\"add-item\" type=\"text\" placeholder=\"Title\" />\n          <input className=\"add-item\" type=\"text\" placeholder=\"Author\" />\n          <input className=\"add-item\" type=\"text\" placeholder=\"Rating\" />\n          <button onSubmit={newEntry}>Add</button>\n        </form>\n        <Table hover className=\"book-table\">\n          <thead>\n            <tr>\n              <th>Read</th>\n              <th>Title</th>\n              <th>Author</th>\n              <th>Rating</th>\n            </tr>\n          </thead>\n          <tbody>\n            {books.map((book) => {\n              return (\n                <tr>\n                  <td className=\"isread\" scope=\"row\" value={book.isread}>\n                    <Tickbox />\n                  </td>\n                  <td>\n                    <input\n                      className=\"table-editable title\"\n                      type=\"text\"\n                      value={book.title}\n                      disabled={true}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"table-editable author\"\n                      type=\"text\"\n                      value={book.author}\n                      disabled={true}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className=\"table-editable rating\"\n                      type=\"text\"\n                      value={book.rating}\n                      disabled={true}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}