{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/libry/frontend/src/pages/HomePage.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table, Input } from \"reactstrap\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport \"../styles/HomePage.css\";\nimport $ from \"jquery\";\nimport * as constants from \"../constants\";\nimport BookTable from \"../components/BookTable.js\";\nexport default function HomePage() {\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n  const [books, setBooks] = React.useState([]);\n  const [user, setUser] = React.useState(\"\");\n  const [isread, setIsread] = React.useState(false);\n  const [title, setTitle] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [rating, setRating] = React.useState(\"\");\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/get-current-user\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setUser(u[\"username\"]);\n      });\n    } else {\n      history.push(\"/login\");\n    }\n  }, [token]);\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username: user\n        })\n      }).then(b => b.json()).then(b => {\n        console.log(b);\n        setBooks(b);\n      });\n    }\n  }, [token]);\n\n  function newEntry(e) {\n    e.preventDefault();\n    fetch(constants.dbstring + \"/add-book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: user\n      })\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"checkbox\",\n    checked: isread // onClick={setIsread(!isread)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"text\",\n    placeholder: \"Title\",\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"text\",\n    placeholder: \"Author\",\n    onChange: e => setAuthor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-item\",\n    type: \"text\",\n    placeholder: \"Rating\",\n    onChange: e => setRating(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onSubmit: newEntry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(BookTable, {\n    books: books,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/libry/frontend/src/pages/HomePage.js"],"names":["React","useHistory","Table","Input","CustomNavbar","$","constants","BookTable","HomePage","history","token","localStorage","getItem","books","setBooks","useState","user","setUser","isread","setIsread","title","setTitle","author","setAuthor","rating","setRating","useEffect","fetch","dbstring","headers","Authorization","then","res","json","u","push","method","body","JSON","stringify","username","b","console","log","newEntry","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Table, Input } from \"reactstrap\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport \"../styles/HomePage.css\";\nimport $ from \"jquery\";\nimport * as constants from \"../constants\";\nimport BookTable from \"../components/BookTable.js\";\n\nexport default function HomePage() {\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n  const [books, setBooks] = React.useState([]);\n  const [user, setUser] = React.useState(\"\");\n  const [isread, setIsread] = React.useState(false);\n  const [title, setTitle] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [rating, setRating] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/get-current-user\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => res.json())\n        .then((u) => {\n          setUser(u[\"username\"]);\n        });\n    } else {\n      history.push(\"/login\");\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    if (token) {\n      fetch(constants.dbstring + \"/\", {\n        method: \"POST\",\n        headers: { Authorization: `Bearer ${token}` },\n        body: JSON.stringify({ username: user }),\n      })\n        .then((b) => b.json())\n        .then((b) => {\n          console.log(b);\n          setBooks(b);\n        });\n    }\n  }, [token]);\n\n  function newEntry(e) {\n    e.preventDefault();\n\n    fetch(constants.dbstring + \"/add-book\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: user,\n      }),\n    });\n  }\n\n  return (\n    <div>\n      <CustomNavbar />\n\n      <div className=\"content\">\n        <form>\n          <input\n            className=\"add-item\"\n            type=\"checkbox\"\n            checked={isread}\n            // onClick={setIsread(!isread)}\n          />{\" \"}\n          <input\n            className=\"add-item\"\n            type=\"text\"\n            placeholder=\"Title\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <input\n            className=\"add-item\"\n            type=\"text\"\n            placeholder=\"Author\"\n            onChange={(e) => setAuthor(e.target.value)}\n          />\n          <input\n            className=\"add-item\"\n            type=\"text\"\n            placeholder=\"Rating\"\n            onChange={(e) => setRating(e.target.value)}\n          />\n          <button onSubmit={newEntry}>Add</button>\n        </form>\n        <BookTable books={books} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}