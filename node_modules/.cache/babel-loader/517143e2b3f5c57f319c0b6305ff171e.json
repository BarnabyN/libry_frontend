{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/lectio/frontend/src/components/BookSearch.js\";\nimport React from \"react\";\nexport default function BookSearch() {\n  const [loading, setLoading] = React.useState(true);\n  const [searchTitle, setSearchTitle] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState(Object);\n  React.useEffect(() => {\n    console.log(searchTitle);\n    const formattedTitle = searchTitle.replace(\" \", \"+\");\n    const url = `http://openlibrary.org/search.json?title=${formattedTitle}`;\n    fetch(url).then(res => res.json()).then(res => {\n      setSearchResults(res.docs);\n      setLoading(false);\n      console.log(res);\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"title\",\n    placeholder: \"Title\",\n    onChange: e => setSearchTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hl\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, loading ? \"\" : searchResults.slice(0, 5).map(book => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }\n    }, book.title_suggest);\n  })));\n}","map":{"version":3,"sources":["/Users/barnabynapier/Documents/lectio/frontend/src/components/BookSearch.js"],"names":["React","BookSearch","loading","setLoading","useState","searchTitle","setSearchTitle","searchResults","setSearchResults","Object","useEffect","console","log","formattedTitle","replace","url","fetch","then","res","json","docs","e","target","value","slice","map","book","title_suggest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,KAAK,CAACI,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCR,KAAK,CAACI,QAAN,CAAeK,MAAf,CAA1C;AAEAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACA,UAAMQ,cAAc,GAAGR,WAAW,CAACS,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,CAAvB;AACA,UAAMC,GAAG,GAAI,4CAA2CF,cAAe,EAAvE;AAEAG,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,gBAAgB,CAACU,GAAG,CAACE,IAAL,CAAhB;AACAjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,KANH;AAOD,GAZD;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,EAAGG,CAAD,IAAOf,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,OAAO,GACJ,EADI,GAEJK,aAAa,CAACiB,KAAd,CAAoB,CAApB,EAAuB,CAAvB,EAA0BC,GAA1B,CAA+BC,IAAD,IAAU;AACtC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,aAAV,CAAP;AACD,GAFD,CAHN,CAPF,CADF;AAiBD","sourcesContent":["import React from \"react\";\n\nexport default function BookSearch() {\n  const [loading, setLoading] = React.useState(true);\n  const [searchTitle, setSearchTitle] = React.useState(\"\");\n  const [searchResults, setSearchResults] = React.useState(Object);\n\n  React.useEffect(() => {\n    console.log(searchTitle);\n    const formattedTitle = searchTitle.replace(\" \", \"+\");\n    const url = `http://openlibrary.org/search.json?title=${formattedTitle}`;\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setSearchResults(res.docs);\n        setLoading(false);\n        console.log(res);\n      });\n  });\n\n  return (\n    <div>\n      <input\n        type=\"title\"\n        placeholder=\"Title\"\n        onChange={(e) => setSearchTitle(e.target.value)}\n      />\n      <hl />\n      <ul>\n        {loading\n          ? \"\"\n          : searchResults.slice(0, 5).map((book) => {\n              return <li>{book.title_suggest}</li>;\n            })}\n      </ul>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}